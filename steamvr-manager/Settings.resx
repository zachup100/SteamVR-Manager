<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI2NjQB6enoAh4eHDYeHhzaHh4duh4eHmYeH
        h7aHh4fDh4eHwoeHh7SHh4eXh4eHa4aGhjOFhYUMhoaGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWFhQB1dXUAgoKCFoGBgWCDg4Oyg4OD5oOD
        g/iEhIT/g4OD/4ODg/+Dg4P/hISE/4SEhP+Dg4P4g4OD5IKCgq2CgoJbgYGBFHR0dACKiooAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8fHwAfHx8CHx8fFJ+fn7Bfn5++H5+
        fv9+fn7/fn5+/35+fv9+fn7/fn5+/35+fv9+fn7/fn5+/35+fv9+fn7/fn5+/35+fvZ+fn69fHx8TXx8
        fAZ7e3sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHh4AHd3dxZ5eXmLenp673p6
        ev96enr/enp6/3p6ev96enr/enp6/3p6ev96enr/enp6/3p6ev96enr/enp6/3p6ev96enr/enp6/3p6
        ev96enrteXl5hHd3dxN3d3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHR0dABzc3MddHR0qXV1
        dft1dXX/dXV1/3Nzc/9zc3P/c3Nz/3Nzc/90dHT/dXV1/3V1df91dXX/dXV1/3V1df91dXX/dXV1/3V1
        df91dXX/dXV1/3V1df91dXX6dXV1oXNzcxp0dHQAAAAAAAAAAAAAAAAAAAAAAAAAAABxcXEAcHBwFnJy
        cqhycnL+cnJy/3Fxcf91dXX/kpKS/7CwsP+zs7P/m5ub/3p6ev9xcXH/cnJy/3Jycv9ycnL/cnJy/3Jy
        cv9ycnL/cnJy/3Jycv9ycnL/cnJy/3Jycv9ycnL9cnJyonFxcRNxcXEAAAAAAAAAAAAAAAAAbm5uAG5u
        bgdubm6Mb29v/G9vb/9ubm7/eHh4/7q6uv/Z2dn/wMDA/7y8vP/U1NT/zMzM/4SEhP9ubm7/b29v/29v
        b/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2//b29v/29vb/9vb2/7bm5uhG1tbQVubm4AAAAAAGtr
        awBsbGwAa2trVGxsbPBsbGz/bGxs/2xsbP+ysrL/1tbW/6Wlpf+1tbX/tLS0/5KSkv+8vLz/zMzM/3V1
        df9ra2v/bGxs/2xsbP9sbGz/bGxs/2xsbP9sbGz/bGxs/2xsbP9sbGz/bGxs/2xsbP9sbGzsa2trS2xs
        bABra2sAaGhoAGdnZxdoaGjDaGho/2dnZ/9nZ2f/hISE/+fn5//o6Oj/8vLy////////////4ODg/4yM
        jP/U1NT/lZWV/2ZmZv9oaGj/aGho/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2hoaP9oaGj/aGho/2ho
        aP9oaGi7Z2dnE2dnZwBmZmYAY2NjY2NjY/lpaWn/goKC/7Kysv/i4uL//v7+////////////////////
        ////////paWl/7q6uv+wsLD/Y2Nj/2VlZf9lZWX/ZWVl/2VlZf9lZWX/ZWVl/2VlZf9lZWX/ZWVl/2Vl
        Zf9lZWX/ZWVl/2VlZfdkZGRZZGRkAGFhYQ9ycnK1kZGR/8XFxf/v7+///v7+////////////////////
        //////////////7+/v+enp7/vb29/+np6f+Xl5f/ZWVl/2FhYf9iYmL/YmJi/2JiYv9iYmL/YmJi/2Ji
        Yv9iYmL/YmJi/2JiYv9iYmL/YmJi/2JiYqthYWEL2traQN7e3un39/f/////////////////////////
        ///////////////////9/f3/z8/P/4aGhv/h4eH///////X19f+2trb/b29v/11dXf9fX1//X19f/19f
        X/9fX1//X19f/19fX/9fX1//X19f/19fX/9fX1//X19f4l9fXzD+/v54////+///////////////////
        ///////////////////+/v7/3t7e/6Wlpf+Kior/yMjI//7+/v////////////39/f/V1dX/g4OD/1tb
        W/9ZWVn/Wlpa/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v3W1tbZ////57/////////////
        //////////////7+/v/r6+v/ycnJ/9zc3P/Y2Nj/0dHR/+rq6v/+/v7/////////////////////////
        ///t7e3/o6Oj/3Jycv9lZWX/WFhY/1dXV/9YWFj/WFhY/1hYWP9YWFj/WFhY/1hYWP9YWFiT////tf//
        //////////////r6+v/b29v/paWl/3Nzc/9ZWVn/Z2dn/4CAgP+6urr//v7+////////////////////
        ///////////////////7+/v/6+vr/9ra2v+vr6//b29v/1RUVP9VVVX/VVVV/1VVVf9VVVX/VVVV/1VV
        VbD////E//////Dw8P/FxcX/jIyM/2JiYv9TU1P/UlJS/1NTU/9SUlL/UFBQ/2NjY//S0tL/////////
        ////////////////////////+/v7/+np6f/m5ub/+Pj4///////g4OD/gYGB/1JSUv9TU1P/U1NT/1NT
        U/9TU1P/U1NTvtfX18itra3/dXV1/1VVVf9OTk7/UFBQ/1FRUf9RUVH/UVFR/1FRUf9RUVH/T09P/3x8
        fP/t7e3//////////////////////9/f3/+UlJT/gICA/4GBgf+Hh4f/yMjI//39/f/h4eH/bm5u/09P
        T/9RUVH/UVFR/1FRUf9RUVG+XFxcu09PT/9NTU3/Tk5O/05OTv9OTk7/Tk5O/05OTv9OTk7/Tk5O/05O
        Tv9OTk7/T09P/6Ghof/8/Pz////////////k5OT/fX19/6Ojo//e3t7/5OTk/729vf94eHj/xMTE////
        //+wsLD/UFBQ/05OTv9OTk7/Tk5O/05OTrBLS0ueTExM/0xMTP9MTEz/TExM/0xMTP9MTEz/TExM/0xM
        TP9MTEz/TExM/0xMTP9LS0v/WFhY/8nJyf///////////6Ghof+YmJj/+/v7/////////////////8HB
        wf+BgYH/8/Pz/9/f3/9eXl7/S0tL/0xMTP9MTEz/TExMk0tLS3JLS0v5S0tL/0tLS/9LS0v/S0tL/0tL
        S/9LS0v/S0tL/0tLS/9LS0v/S0tL/0tLS/9JSUn/cnJy/+vr6//7+/v/fn5+/8vLy///////////////
        ////////8PDw/3d3d//f39//9PT0/2lpaf9JSUn/S0tL/0tLS/dLS0tnSkpKOUpKSudKSkr/SkpK/0pK
        Sv9KSkr/SkpK/0pKSv9KSkr/SkpK/0pKSv9KSkr/SkpK/0pKSv9PT0//z8/P//39/f9/f3//yMjI////
        ///////////////////u7u7/d3d3/+Dg4P/z8/P/Z2dn/0hISP9KSkr/SkpK40pKSjBISEgPSUlJtUlJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSf+0tLT//////6Wl
        pf+QkJD/9/f3/////////////////7i4uP+Dg4P/9fX1/9vb2/9ZWVn/SEhI/0lJSf9JSUmsSUlJC0hI
        SABISEhjSEhI+khISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/RkZG/35+
        fv/29vb/6urq/4CAgP+VlZX/0tLS/9nZ2f+urq7/dXV1/8zMzP//////p6en/0lJSf9ISEj/SEhI90hI
        SFpISEgASEhIAEhISBhISEjDSEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hI
        SP9ISEj/T09P/7S0tP/+/v7/5ubm/52dnf9/f3//f39//46Ojv/R0dH//////9fX1/9hYWH/R0dH/0hI
        SP9ISEi7SEhIE0hISABISEgASEhIAEhISFVISEjwSEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hI
        SP9ISEj/SEhI/0hISP9HR0f/WFhY/7e3t//4+Pj//v7+//Ly8v/u7u7/+/v7//39/f/S0tL/bm5u/0ZG
        Rv9ISEj/SEhI7EhISExISEgASEhIAAAAAABHR0cAR0dHB0dHR41HR0f8R0dH/0dHR/9HR0f/R0dH/0dH
        R/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9GRkb/UFBQ/4WFhf++vr7/2dnZ/9zc3P/Jycn/mJiY/1tb
        W/9GRkb/R0dH/0dHR/tHR0eESUlJBUhISAAAAAAAAAAAAAAAAABISEgASEhIFkhISKlISEj+SEhI/0hI
        SP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9HR0f/RkZG/0xMTP9XV1f/WVlZ/1BQ
        UP9GRkb/R0dH/0hISP9ISEj9SEhIokhISBNISEgAAAAAAAAAAAAAAAAAAAAAAAAAAABISEgASEhIHUhI
        SKhISEj7SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0dH
        R/9HR0f/R0dH/0hISP9ISEj/SEhI+khISKNISEgaSEhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABISEgASEhIFkhISIxISEjvSEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISP9ISEj/SEhI/0hI
        SP9ISEj/SEhI/0hISP9ISEj/SEhI/0hISO5JSUmGSUlJFElJSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABJSUkASUlJCElJSVNJSUnCSUlJ90lJSf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJ
        Sf9JSUn/SUlJ/0lJSf9JSUn/SUlJ/0lJSfhJSUm+SUlJTktLSwZKSkoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLS0sATExMAEtLSxVKSkpdSkpKskpKSuZKSkr4SkpK/0pK
        Sv9KSkr/SkpK/0pKSv9KSkr/SkpK+EpKSuRKSkqvSkpKYEpKShRLS0sASUlJAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATk5OAFtbWwBKSkoOSkpKN0tL
        S29LS0uaS0tLtUtLS8JLS0vCS0tLtEtLS5hLS0tsSkpKNEpKSgxKSkoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>